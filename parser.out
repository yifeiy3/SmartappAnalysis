Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARRAY
    COMMENT
    EQUAL
    LONGCOMMENT
    MATH

Grammar

Rule 0     S' -> program
Rule 1     program -> program funcDef
Rule 2     program -> funcDef
Rule 3     program -> program prefBlock
Rule 4     program -> prefBlock
Rule 5     program -> notNeededBlock
Rule 6     program -> program notNeededBlock
Rule 7     notNeededBlock -> DEFINITION LPAREN error RPAREN
Rule 8     notNeededBlock -> MAPPING LBRACKET error RBRACKET
Rule 9     funcDef -> DEF IDENT LPAREN paramlist RPAREN LBRACKET stmtList RBRACKET
Rule 10    funcDef -> DEF IDENT LPAREN RPAREN LBRACKET stmtList RBRACKET
Rule 11    prefBlock -> PREFERENCE LBRACKET sectionblocklist RBRACKET
Rule 12    sectionblocklist -> sectionblock
Rule 13    sectionblocklist -> sectionblocklist NEWLINE sectionblock
Rule 14    sectionblocklist -> sectionblocklist NEWLINE
Rule 15    sectionblock -> SECTION LPAREN STRING RPAREN ILBRACKET blockparamlist IRBRACKET
Rule 16    blockparamlist -> blockparamlist COMMA blockparam
Rule 17    blockparamlist -> blockparam
Rule 18    blockparam -> INPUT STRING
Rule 19    blockparam -> STRING
Rule 20    blockparam -> TITLE COLON STRING
Rule 21    blockparam -> MULTIPLE COLON BOOL
Rule 22    blockparam -> REQUIRED COLON BOOL
Rule 23    stmtList -> stmtList NEWLINE
Rule 24    stmtList -> stmtList NEWLINE stmt
Rule 25    stmtList -> stmt
Rule 26    stmtList -> stmtList stmt
Rule 27    stmt -> functionCall
Rule 28    stmt -> functionWithObj
Rule 29    stmt -> error NEWLINE
Rule 30    functionCall -> IDENT LPAREN paramlist RPAREN
Rule 31    functionCall -> IDENT LPAREN RPAREN
Rule 32    functionCall -> IDENT LPAREN error NEWLINE
Rule 33    functionCall -> IDENT error NEWLINE
Rule 34    functionWithObj -> IDENT DOT functionCall
Rule 35    functionWithObj -> IDENT DOT error NEWLINE
Rule 36    paramlist -> paramlist COMMA param
Rule 37    paramlist -> param
Rule 38    param -> identparam
Rule 39    param -> strparam
Rule 40    param -> numparam
Rule 41    identparam -> IDENT
Rule 42    identparam -> IDENT NEWLINE
Rule 43    identparam -> NEWLINE IDENT
Rule 44    strparam -> STRING
Rule 45    strparam -> STRING NEWLINE
Rule 46    strparam -> NEWLINE STRING
Rule 47    numparam -> NUMBER
Rule 48    numparam -> NUMBER NEWLINE
Rule 49    numparam -> NEWLINE NUMBER

Terminals, with rules where they appear

ARRAY                : 
BOOL                 : 21 22
COLON                : 20 21 22
COMMA                : 16 36
COMMENT              : 
DEF                  : 9 10
DEFINITION           : 7
DOT                  : 34 35
EQUAL                : 
IDENT                : 9 10 30 31 32 33 34 35 41 42 43
ILBRACKET            : 15
INPUT                : 18
IRBRACKET            : 15
LBRACKET             : 8 9 10 11
LONGCOMMENT          : 
LPAREN               : 7 9 10 15 30 31 32
MAPPING              : 8
MATH                 : 
MULTIPLE             : 21
NEWLINE              : 13 14 23 24 29 32 33 35 42 43 45 46 48 49
NUMBER               : 47 48 49
PREFERENCE           : 11
RBRACKET             : 8 9 10 11
REQUIRED             : 22
RPAREN               : 7 9 10 15 30 31
SECTION              : 15
STRING               : 15 18 19 20 44 45 46
TITLE                : 20
error                : 7 8 29 32 33 35

Nonterminals, with rules where they appear

blockparam           : 16 17
blockparamlist       : 15 16
funcDef              : 1 2
functionCall         : 27 34
functionWithObj      : 28
identparam           : 38
notNeededBlock       : 5 6
numparam             : 40
param                : 36 37
paramlist            : 9 30 36
prefBlock            : 3 4
program              : 1 3 6 0
sectionblock         : 12 13
sectionblocklist     : 11 13 14
stmt                 : 24 25 26
stmtList             : 9 10 23 24 26
strparam             : 39

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program funcDef
    (2) program -> . funcDef
    (3) program -> . program prefBlock
    (4) program -> . prefBlock
    (5) program -> . notNeededBlock
    (6) program -> . program notNeededBlock
    (9) funcDef -> . DEF IDENT LPAREN paramlist RPAREN LBRACKET stmtList RBRACKET
    (10) funcDef -> . DEF IDENT LPAREN RPAREN LBRACKET stmtList RBRACKET
    (11) prefBlock -> . PREFERENCE LBRACKET sectionblocklist RBRACKET
    (7) notNeededBlock -> . DEFINITION LPAREN error RPAREN
    (8) notNeededBlock -> . MAPPING LBRACKET error RBRACKET

    DEF             shift and go to state 5
    PREFERENCE      shift and go to state 6
    DEFINITION      shift and go to state 7
    MAPPING         shift and go to state 8

    program                        shift and go to state 1
    funcDef                        shift and go to state 2
    prefBlock                      shift and go to state 3
    notNeededBlock                 shift and go to state 4

state 1

    (0) S' -> program .
    (1) program -> program . funcDef
    (3) program -> program . prefBlock
    (6) program -> program . notNeededBlock
    (9) funcDef -> . DEF IDENT LPAREN paramlist RPAREN LBRACKET stmtList RBRACKET
    (10) funcDef -> . DEF IDENT LPAREN RPAREN LBRACKET stmtList RBRACKET
    (11) prefBlock -> . PREFERENCE LBRACKET sectionblocklist RBRACKET
    (7) notNeededBlock -> . DEFINITION LPAREN error RPAREN
    (8) notNeededBlock -> . MAPPING LBRACKET error RBRACKET

    DEF             shift and go to state 5
    PREFERENCE      shift and go to state 6
    DEFINITION      shift and go to state 7
    MAPPING         shift and go to state 8

    funcDef                        shift and go to state 9
    prefBlock                      shift and go to state 10
    notNeededBlock                 shift and go to state 11

state 2

    (2) program -> funcDef .

    DEF             reduce using rule 2 (program -> funcDef .)
    PREFERENCE      reduce using rule 2 (program -> funcDef .)
    DEFINITION      reduce using rule 2 (program -> funcDef .)
    MAPPING         reduce using rule 2 (program -> funcDef .)
    $end            reduce using rule 2 (program -> funcDef .)


state 3

    (4) program -> prefBlock .

    DEF             reduce using rule 4 (program -> prefBlock .)
    PREFERENCE      reduce using rule 4 (program -> prefBlock .)
    DEFINITION      reduce using rule 4 (program -> prefBlock .)
    MAPPING         reduce using rule 4 (program -> prefBlock .)
    $end            reduce using rule 4 (program -> prefBlock .)


state 4

    (5) program -> notNeededBlock .

    DEF             reduce using rule 5 (program -> notNeededBlock .)
    PREFERENCE      reduce using rule 5 (program -> notNeededBlock .)
    DEFINITION      reduce using rule 5 (program -> notNeededBlock .)
    MAPPING         reduce using rule 5 (program -> notNeededBlock .)
    $end            reduce using rule 5 (program -> notNeededBlock .)


state 5

    (9) funcDef -> DEF . IDENT LPAREN paramlist RPAREN LBRACKET stmtList RBRACKET
    (10) funcDef -> DEF . IDENT LPAREN RPAREN LBRACKET stmtList RBRACKET

    IDENT           shift and go to state 12


state 6

    (11) prefBlock -> PREFERENCE . LBRACKET sectionblocklist RBRACKET

    LBRACKET        shift and go to state 13


state 7

    (7) notNeededBlock -> DEFINITION . LPAREN error RPAREN

    LPAREN          shift and go to state 14


state 8

    (8) notNeededBlock -> MAPPING . LBRACKET error RBRACKET

    LBRACKET        shift and go to state 15


state 9

    (1) program -> program funcDef .

    DEF             reduce using rule 1 (program -> program funcDef .)
    PREFERENCE      reduce using rule 1 (program -> program funcDef .)
    DEFINITION      reduce using rule 1 (program -> program funcDef .)
    MAPPING         reduce using rule 1 (program -> program funcDef .)
    $end            reduce using rule 1 (program -> program funcDef .)


state 10

    (3) program -> program prefBlock .

    DEF             reduce using rule 3 (program -> program prefBlock .)
    PREFERENCE      reduce using rule 3 (program -> program prefBlock .)
    DEFINITION      reduce using rule 3 (program -> program prefBlock .)
    MAPPING         reduce using rule 3 (program -> program prefBlock .)
    $end            reduce using rule 3 (program -> program prefBlock .)


state 11

    (6) program -> program notNeededBlock .

    DEF             reduce using rule 6 (program -> program notNeededBlock .)
    PREFERENCE      reduce using rule 6 (program -> program notNeededBlock .)
    DEFINITION      reduce using rule 6 (program -> program notNeededBlock .)
    MAPPING         reduce using rule 6 (program -> program notNeededBlock .)
    $end            reduce using rule 6 (program -> program notNeededBlock .)


state 12

    (9) funcDef -> DEF IDENT . LPAREN paramlist RPAREN LBRACKET stmtList RBRACKET
    (10) funcDef -> DEF IDENT . LPAREN RPAREN LBRACKET stmtList RBRACKET

    LPAREN          shift and go to state 16


state 13

    (11) prefBlock -> PREFERENCE LBRACKET . sectionblocklist RBRACKET
    (12) sectionblocklist -> . sectionblock
    (13) sectionblocklist -> . sectionblocklist NEWLINE sectionblock
    (14) sectionblocklist -> . sectionblocklist NEWLINE
    (15) sectionblock -> . SECTION LPAREN STRING RPAREN ILBRACKET blockparamlist IRBRACKET

    SECTION         shift and go to state 19

    sectionblocklist               shift and go to state 17
    sectionblock                   shift and go to state 18

state 14

    (7) notNeededBlock -> DEFINITION LPAREN . error RPAREN

    error           shift and go to state 20


state 15

    (8) notNeededBlock -> MAPPING LBRACKET . error RBRACKET

    error           shift and go to state 21


state 16

    (9) funcDef -> DEF IDENT LPAREN . paramlist RPAREN LBRACKET stmtList RBRACKET
    (10) funcDef -> DEF IDENT LPAREN . RPAREN LBRACKET stmtList RBRACKET
    (36) paramlist -> . paramlist COMMA param
    (37) paramlist -> . param
    (38) param -> . identparam
    (39) param -> . strparam
    (40) param -> . numparam
    (41) identparam -> . IDENT
    (42) identparam -> . IDENT NEWLINE
    (43) identparam -> . NEWLINE IDENT
    (44) strparam -> . STRING
    (45) strparam -> . STRING NEWLINE
    (46) strparam -> . NEWLINE STRING
    (47) numparam -> . NUMBER
    (48) numparam -> . NUMBER NEWLINE
    (49) numparam -> . NEWLINE NUMBER

    RPAREN          shift and go to state 24
    IDENT           shift and go to state 22
    NEWLINE         shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 31

    paramlist                      shift and go to state 23
    param                          shift and go to state 25
    identparam                     shift and go to state 26
    strparam                       shift and go to state 27
    numparam                       shift and go to state 28

state 17

    (11) prefBlock -> PREFERENCE LBRACKET sectionblocklist . RBRACKET
    (13) sectionblocklist -> sectionblocklist . NEWLINE sectionblock
    (14) sectionblocklist -> sectionblocklist . NEWLINE

    RBRACKET        shift and go to state 32
    NEWLINE         shift and go to state 33


state 18

    (12) sectionblocklist -> sectionblock .

    RBRACKET        reduce using rule 12 (sectionblocklist -> sectionblock .)
    NEWLINE         reduce using rule 12 (sectionblocklist -> sectionblock .)


state 19

    (15) sectionblock -> SECTION . LPAREN STRING RPAREN ILBRACKET blockparamlist IRBRACKET

    LPAREN          shift and go to state 34


state 20

    (7) notNeededBlock -> DEFINITION LPAREN error . RPAREN

    RPAREN          shift and go to state 35


state 21

    (8) notNeededBlock -> MAPPING LBRACKET error . RBRACKET

    RBRACKET        shift and go to state 36


state 22

    (41) identparam -> IDENT .
    (42) identparam -> IDENT . NEWLINE

    RPAREN          reduce using rule 41 (identparam -> IDENT .)
    COMMA           reduce using rule 41 (identparam -> IDENT .)
    NEWLINE         shift and go to state 37


state 23

    (9) funcDef -> DEF IDENT LPAREN paramlist . RPAREN LBRACKET stmtList RBRACKET
    (36) paramlist -> paramlist . COMMA param

    RPAREN          shift and go to state 38
    COMMA           shift and go to state 39


state 24

    (10) funcDef -> DEF IDENT LPAREN RPAREN . LBRACKET stmtList RBRACKET

    LBRACKET        shift and go to state 40


state 25

    (37) paramlist -> param .

    RPAREN          reduce using rule 37 (paramlist -> param .)
    COMMA           reduce using rule 37 (paramlist -> param .)


state 26

    (38) param -> identparam .

    RPAREN          reduce using rule 38 (param -> identparam .)
    COMMA           reduce using rule 38 (param -> identparam .)


state 27

    (39) param -> strparam .

    RPAREN          reduce using rule 39 (param -> strparam .)
    COMMA           reduce using rule 39 (param -> strparam .)


state 28

    (40) param -> numparam .

    RPAREN          reduce using rule 40 (param -> numparam .)
    COMMA           reduce using rule 40 (param -> numparam .)


state 29

    (43) identparam -> NEWLINE . IDENT
    (46) strparam -> NEWLINE . STRING
    (49) numparam -> NEWLINE . NUMBER

    IDENT           shift and go to state 41
    STRING          shift and go to state 42
    NUMBER          shift and go to state 43


state 30

    (44) strparam -> STRING .
    (45) strparam -> STRING . NEWLINE

    RPAREN          reduce using rule 44 (strparam -> STRING .)
    COMMA           reduce using rule 44 (strparam -> STRING .)
    NEWLINE         shift and go to state 44


state 31

    (47) numparam -> NUMBER .
    (48) numparam -> NUMBER . NEWLINE

    RPAREN          reduce using rule 47 (numparam -> NUMBER .)
    COMMA           reduce using rule 47 (numparam -> NUMBER .)
    NEWLINE         shift and go to state 45


state 32

    (11) prefBlock -> PREFERENCE LBRACKET sectionblocklist RBRACKET .

    DEF             reduce using rule 11 (prefBlock -> PREFERENCE LBRACKET sectionblocklist RBRACKET .)
    PREFERENCE      reduce using rule 11 (prefBlock -> PREFERENCE LBRACKET sectionblocklist RBRACKET .)
    DEFINITION      reduce using rule 11 (prefBlock -> PREFERENCE LBRACKET sectionblocklist RBRACKET .)
    MAPPING         reduce using rule 11 (prefBlock -> PREFERENCE LBRACKET sectionblocklist RBRACKET .)
    $end            reduce using rule 11 (prefBlock -> PREFERENCE LBRACKET sectionblocklist RBRACKET .)


state 33

    (13) sectionblocklist -> sectionblocklist NEWLINE . sectionblock
    (14) sectionblocklist -> sectionblocklist NEWLINE .
    (15) sectionblock -> . SECTION LPAREN STRING RPAREN ILBRACKET blockparamlist IRBRACKET

    RBRACKET        reduce using rule 14 (sectionblocklist -> sectionblocklist NEWLINE .)
    NEWLINE         reduce using rule 14 (sectionblocklist -> sectionblocklist NEWLINE .)
    SECTION         shift and go to state 19

    sectionblock                   shift and go to state 46

state 34

    (15) sectionblock -> SECTION LPAREN . STRING RPAREN ILBRACKET blockparamlist IRBRACKET

    STRING          shift and go to state 47


state 35

    (7) notNeededBlock -> DEFINITION LPAREN error RPAREN .

    DEF             reduce using rule 7 (notNeededBlock -> DEFINITION LPAREN error RPAREN .)
    PREFERENCE      reduce using rule 7 (notNeededBlock -> DEFINITION LPAREN error RPAREN .)
    DEFINITION      reduce using rule 7 (notNeededBlock -> DEFINITION LPAREN error RPAREN .)
    MAPPING         reduce using rule 7 (notNeededBlock -> DEFINITION LPAREN error RPAREN .)
    $end            reduce using rule 7 (notNeededBlock -> DEFINITION LPAREN error RPAREN .)


state 36

    (8) notNeededBlock -> MAPPING LBRACKET error RBRACKET .

    DEF             reduce using rule 8 (notNeededBlock -> MAPPING LBRACKET error RBRACKET .)
    PREFERENCE      reduce using rule 8 (notNeededBlock -> MAPPING LBRACKET error RBRACKET .)
    DEFINITION      reduce using rule 8 (notNeededBlock -> MAPPING LBRACKET error RBRACKET .)
    MAPPING         reduce using rule 8 (notNeededBlock -> MAPPING LBRACKET error RBRACKET .)
    $end            reduce using rule 8 (notNeededBlock -> MAPPING LBRACKET error RBRACKET .)


state 37

    (42) identparam -> IDENT NEWLINE .

    RPAREN          reduce using rule 42 (identparam -> IDENT NEWLINE .)
    COMMA           reduce using rule 42 (identparam -> IDENT NEWLINE .)


state 38

    (9) funcDef -> DEF IDENT LPAREN paramlist RPAREN . LBRACKET stmtList RBRACKET

    LBRACKET        shift and go to state 48


state 39

    (36) paramlist -> paramlist COMMA . param
    (38) param -> . identparam
    (39) param -> . strparam
    (40) param -> . numparam
    (41) identparam -> . IDENT
    (42) identparam -> . IDENT NEWLINE
    (43) identparam -> . NEWLINE IDENT
    (44) strparam -> . STRING
    (45) strparam -> . STRING NEWLINE
    (46) strparam -> . NEWLINE STRING
    (47) numparam -> . NUMBER
    (48) numparam -> . NUMBER NEWLINE
    (49) numparam -> . NEWLINE NUMBER

    IDENT           shift and go to state 22
    NEWLINE         shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 31

    param                          shift and go to state 49
    identparam                     shift and go to state 26
    strparam                       shift and go to state 27
    numparam                       shift and go to state 28

state 40

    (10) funcDef -> DEF IDENT LPAREN RPAREN LBRACKET . stmtList RBRACKET
    (23) stmtList -> . stmtList NEWLINE
    (24) stmtList -> . stmtList NEWLINE stmt
    (25) stmtList -> . stmt
    (26) stmtList -> . stmtList stmt
    (27) stmt -> . functionCall
    (28) stmt -> . functionWithObj
    (29) stmt -> . error NEWLINE
    (30) functionCall -> . IDENT LPAREN paramlist RPAREN
    (31) functionCall -> . IDENT LPAREN RPAREN
    (32) functionCall -> . IDENT LPAREN error NEWLINE
    (33) functionCall -> . IDENT error NEWLINE
    (34) functionWithObj -> . IDENT DOT functionCall
    (35) functionWithObj -> . IDENT DOT error NEWLINE

    error           shift and go to state 55
    IDENT           shift and go to state 50

    stmtList                       shift and go to state 51
    stmt                           shift and go to state 52
    functionCall                   shift and go to state 53
    functionWithObj                shift and go to state 54

state 41

    (43) identparam -> NEWLINE IDENT .

    RPAREN          reduce using rule 43 (identparam -> NEWLINE IDENT .)
    COMMA           reduce using rule 43 (identparam -> NEWLINE IDENT .)


state 42

    (46) strparam -> NEWLINE STRING .

    RPAREN          reduce using rule 46 (strparam -> NEWLINE STRING .)
    COMMA           reduce using rule 46 (strparam -> NEWLINE STRING .)


state 43

    (49) numparam -> NEWLINE NUMBER .

    RPAREN          reduce using rule 49 (numparam -> NEWLINE NUMBER .)
    COMMA           reduce using rule 49 (numparam -> NEWLINE NUMBER .)


state 44

    (45) strparam -> STRING NEWLINE .

    RPAREN          reduce using rule 45 (strparam -> STRING NEWLINE .)
    COMMA           reduce using rule 45 (strparam -> STRING NEWLINE .)


state 45

    (48) numparam -> NUMBER NEWLINE .

    RPAREN          reduce using rule 48 (numparam -> NUMBER NEWLINE .)
    COMMA           reduce using rule 48 (numparam -> NUMBER NEWLINE .)


state 46

    (13) sectionblocklist -> sectionblocklist NEWLINE sectionblock .

    RBRACKET        reduce using rule 13 (sectionblocklist -> sectionblocklist NEWLINE sectionblock .)
    NEWLINE         reduce using rule 13 (sectionblocklist -> sectionblocklist NEWLINE sectionblock .)


state 47

    (15) sectionblock -> SECTION LPAREN STRING . RPAREN ILBRACKET blockparamlist IRBRACKET

    RPAREN          shift and go to state 56


state 48

    (9) funcDef -> DEF IDENT LPAREN paramlist RPAREN LBRACKET . stmtList RBRACKET
    (23) stmtList -> . stmtList NEWLINE
    (24) stmtList -> . stmtList NEWLINE stmt
    (25) stmtList -> . stmt
    (26) stmtList -> . stmtList stmt
    (27) stmt -> . functionCall
    (28) stmt -> . functionWithObj
    (29) stmt -> . error NEWLINE
    (30) functionCall -> . IDENT LPAREN paramlist RPAREN
    (31) functionCall -> . IDENT LPAREN RPAREN
    (32) functionCall -> . IDENT LPAREN error NEWLINE
    (33) functionCall -> . IDENT error NEWLINE
    (34) functionWithObj -> . IDENT DOT functionCall
    (35) functionWithObj -> . IDENT DOT error NEWLINE

    error           shift and go to state 55
    IDENT           shift and go to state 50

    stmtList                       shift and go to state 57
    stmt                           shift and go to state 52
    functionCall                   shift and go to state 53
    functionWithObj                shift and go to state 54

state 49

    (36) paramlist -> paramlist COMMA param .

    RPAREN          reduce using rule 36 (paramlist -> paramlist COMMA param .)
    COMMA           reduce using rule 36 (paramlist -> paramlist COMMA param .)


state 50

    (30) functionCall -> IDENT . LPAREN paramlist RPAREN
    (31) functionCall -> IDENT . LPAREN RPAREN
    (32) functionCall -> IDENT . LPAREN error NEWLINE
    (33) functionCall -> IDENT . error NEWLINE
    (34) functionWithObj -> IDENT . DOT functionCall
    (35) functionWithObj -> IDENT . DOT error NEWLINE

    LPAREN          shift and go to state 58
    error           shift and go to state 59
    DOT             shift and go to state 60


state 51

    (10) funcDef -> DEF IDENT LPAREN RPAREN LBRACKET stmtList . RBRACKET
    (23) stmtList -> stmtList . NEWLINE
    (24) stmtList -> stmtList . NEWLINE stmt
    (26) stmtList -> stmtList . stmt
    (27) stmt -> . functionCall
    (28) stmt -> . functionWithObj
    (29) stmt -> . error NEWLINE
    (30) functionCall -> . IDENT LPAREN paramlist RPAREN
    (31) functionCall -> . IDENT LPAREN RPAREN
    (32) functionCall -> . IDENT LPAREN error NEWLINE
    (33) functionCall -> . IDENT error NEWLINE
    (34) functionWithObj -> . IDENT DOT functionCall
    (35) functionWithObj -> . IDENT DOT error NEWLINE

    RBRACKET        shift and go to state 61
    NEWLINE         shift and go to state 62
    error           shift and go to state 55
    IDENT           shift and go to state 50

    stmt                           shift and go to state 63
    functionCall                   shift and go to state 53
    functionWithObj                shift and go to state 54

state 52

    (25) stmtList -> stmt .

    RBRACKET        reduce using rule 25 (stmtList -> stmt .)
    NEWLINE         reduce using rule 25 (stmtList -> stmt .)
    error           reduce using rule 25 (stmtList -> stmt .)
    IDENT           reduce using rule 25 (stmtList -> stmt .)


state 53

    (27) stmt -> functionCall .

    RBRACKET        reduce using rule 27 (stmt -> functionCall .)
    NEWLINE         reduce using rule 27 (stmt -> functionCall .)
    error           reduce using rule 27 (stmt -> functionCall .)
    IDENT           reduce using rule 27 (stmt -> functionCall .)


state 54

    (28) stmt -> functionWithObj .

    RBRACKET        reduce using rule 28 (stmt -> functionWithObj .)
    NEWLINE         reduce using rule 28 (stmt -> functionWithObj .)
    error           reduce using rule 28 (stmt -> functionWithObj .)
    IDENT           reduce using rule 28 (stmt -> functionWithObj .)


state 55

    (29) stmt -> error . NEWLINE

    NEWLINE         shift and go to state 64


state 56

    (15) sectionblock -> SECTION LPAREN STRING RPAREN . ILBRACKET blockparamlist IRBRACKET

    ILBRACKET       shift and go to state 65


state 57

    (9) funcDef -> DEF IDENT LPAREN paramlist RPAREN LBRACKET stmtList . RBRACKET
    (23) stmtList -> stmtList . NEWLINE
    (24) stmtList -> stmtList . NEWLINE stmt
    (26) stmtList -> stmtList . stmt
    (27) stmt -> . functionCall
    (28) stmt -> . functionWithObj
    (29) stmt -> . error NEWLINE
    (30) functionCall -> . IDENT LPAREN paramlist RPAREN
    (31) functionCall -> . IDENT LPAREN RPAREN
    (32) functionCall -> . IDENT LPAREN error NEWLINE
    (33) functionCall -> . IDENT error NEWLINE
    (34) functionWithObj -> . IDENT DOT functionCall
    (35) functionWithObj -> . IDENT DOT error NEWLINE

    RBRACKET        shift and go to state 66
    NEWLINE         shift and go to state 62
    error           shift and go to state 55
    IDENT           shift and go to state 50

    stmt                           shift and go to state 63
    functionCall                   shift and go to state 53
    functionWithObj                shift and go to state 54

state 58

    (30) functionCall -> IDENT LPAREN . paramlist RPAREN
    (31) functionCall -> IDENT LPAREN . RPAREN
    (32) functionCall -> IDENT LPAREN . error NEWLINE
    (36) paramlist -> . paramlist COMMA param
    (37) paramlist -> . param
    (38) param -> . identparam
    (39) param -> . strparam
    (40) param -> . numparam
    (41) identparam -> . IDENT
    (42) identparam -> . IDENT NEWLINE
    (43) identparam -> . NEWLINE IDENT
    (44) strparam -> . STRING
    (45) strparam -> . STRING NEWLINE
    (46) strparam -> . NEWLINE STRING
    (47) numparam -> . NUMBER
    (48) numparam -> . NUMBER NEWLINE
    (49) numparam -> . NEWLINE NUMBER

    RPAREN          shift and go to state 68
    error           shift and go to state 69
    IDENT           shift and go to state 22
    NEWLINE         shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 31

    paramlist                      shift and go to state 67
    param                          shift and go to state 25
    identparam                     shift and go to state 26
    strparam                       shift and go to state 27
    numparam                       shift and go to state 28

state 59

    (33) functionCall -> IDENT error . NEWLINE

    NEWLINE         shift and go to state 70


state 60

    (34) functionWithObj -> IDENT DOT . functionCall
    (35) functionWithObj -> IDENT DOT . error NEWLINE
    (30) functionCall -> . IDENT LPAREN paramlist RPAREN
    (31) functionCall -> . IDENT LPAREN RPAREN
    (32) functionCall -> . IDENT LPAREN error NEWLINE
    (33) functionCall -> . IDENT error NEWLINE

    error           shift and go to state 73
    IDENT           shift and go to state 71

    functionCall                   shift and go to state 72

state 61

    (10) funcDef -> DEF IDENT LPAREN RPAREN LBRACKET stmtList RBRACKET .

    DEF             reduce using rule 10 (funcDef -> DEF IDENT LPAREN RPAREN LBRACKET stmtList RBRACKET .)
    PREFERENCE      reduce using rule 10 (funcDef -> DEF IDENT LPAREN RPAREN LBRACKET stmtList RBRACKET .)
    DEFINITION      reduce using rule 10 (funcDef -> DEF IDENT LPAREN RPAREN LBRACKET stmtList RBRACKET .)
    MAPPING         reduce using rule 10 (funcDef -> DEF IDENT LPAREN RPAREN LBRACKET stmtList RBRACKET .)
    $end            reduce using rule 10 (funcDef -> DEF IDENT LPAREN RPAREN LBRACKET stmtList RBRACKET .)


state 62

    (23) stmtList -> stmtList NEWLINE .
    (24) stmtList -> stmtList NEWLINE . stmt
    (27) stmt -> . functionCall
    (28) stmt -> . functionWithObj
    (29) stmt -> . error NEWLINE
    (30) functionCall -> . IDENT LPAREN paramlist RPAREN
    (31) functionCall -> . IDENT LPAREN RPAREN
    (32) functionCall -> . IDENT LPAREN error NEWLINE
    (33) functionCall -> . IDENT error NEWLINE
    (34) functionWithObj -> . IDENT DOT functionCall
    (35) functionWithObj -> . IDENT DOT error NEWLINE

  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
    RBRACKET        reduce using rule 23 (stmtList -> stmtList NEWLINE .)
    NEWLINE         reduce using rule 23 (stmtList -> stmtList NEWLINE .)
    error           shift and go to state 55
    IDENT           shift and go to state 50

  ! error           [ reduce using rule 23 (stmtList -> stmtList NEWLINE .) ]
  ! IDENT           [ reduce using rule 23 (stmtList -> stmtList NEWLINE .) ]

    stmt                           shift and go to state 74
    functionCall                   shift and go to state 53
    functionWithObj                shift and go to state 54

state 63

    (26) stmtList -> stmtList stmt .

    RBRACKET        reduce using rule 26 (stmtList -> stmtList stmt .)
    NEWLINE         reduce using rule 26 (stmtList -> stmtList stmt .)
    error           reduce using rule 26 (stmtList -> stmtList stmt .)
    IDENT           reduce using rule 26 (stmtList -> stmtList stmt .)


state 64

    (29) stmt -> error NEWLINE .

    RBRACKET        reduce using rule 29 (stmt -> error NEWLINE .)
    NEWLINE         reduce using rule 29 (stmt -> error NEWLINE .)
    error           reduce using rule 29 (stmt -> error NEWLINE .)
    IDENT           reduce using rule 29 (stmt -> error NEWLINE .)


state 65

    (15) sectionblock -> SECTION LPAREN STRING RPAREN ILBRACKET . blockparamlist IRBRACKET
    (16) blockparamlist -> . blockparamlist COMMA blockparam
    (17) blockparamlist -> . blockparam
    (18) blockparam -> . INPUT STRING
    (19) blockparam -> . STRING
    (20) blockparam -> . TITLE COLON STRING
    (21) blockparam -> . MULTIPLE COLON BOOL
    (22) blockparam -> . REQUIRED COLON BOOL

    INPUT           shift and go to state 78
    STRING          shift and go to state 75
    TITLE           shift and go to state 79
    MULTIPLE        shift and go to state 80
    REQUIRED        shift and go to state 81

    blockparamlist                 shift and go to state 76
    blockparam                     shift and go to state 77

state 66

    (9) funcDef -> DEF IDENT LPAREN paramlist RPAREN LBRACKET stmtList RBRACKET .

    DEF             reduce using rule 9 (funcDef -> DEF IDENT LPAREN paramlist RPAREN LBRACKET stmtList RBRACKET .)
    PREFERENCE      reduce using rule 9 (funcDef -> DEF IDENT LPAREN paramlist RPAREN LBRACKET stmtList RBRACKET .)
    DEFINITION      reduce using rule 9 (funcDef -> DEF IDENT LPAREN paramlist RPAREN LBRACKET stmtList RBRACKET .)
    MAPPING         reduce using rule 9 (funcDef -> DEF IDENT LPAREN paramlist RPAREN LBRACKET stmtList RBRACKET .)
    $end            reduce using rule 9 (funcDef -> DEF IDENT LPAREN paramlist RPAREN LBRACKET stmtList RBRACKET .)


state 67

    (30) functionCall -> IDENT LPAREN paramlist . RPAREN
    (36) paramlist -> paramlist . COMMA param

    RPAREN          shift and go to state 82
    COMMA           shift and go to state 39


state 68

    (31) functionCall -> IDENT LPAREN RPAREN .

    RBRACKET        reduce using rule 31 (functionCall -> IDENT LPAREN RPAREN .)
    NEWLINE         reduce using rule 31 (functionCall -> IDENT LPAREN RPAREN .)
    error           reduce using rule 31 (functionCall -> IDENT LPAREN RPAREN .)
    IDENT           reduce using rule 31 (functionCall -> IDENT LPAREN RPAREN .)


state 69

    (32) functionCall -> IDENT LPAREN error . NEWLINE

    NEWLINE         shift and go to state 83


state 70

    (33) functionCall -> IDENT error NEWLINE .

    RBRACKET        reduce using rule 33 (functionCall -> IDENT error NEWLINE .)
    NEWLINE         reduce using rule 33 (functionCall -> IDENT error NEWLINE .)
    error           reduce using rule 33 (functionCall -> IDENT error NEWLINE .)
    IDENT           reduce using rule 33 (functionCall -> IDENT error NEWLINE .)


state 71

    (30) functionCall -> IDENT . LPAREN paramlist RPAREN
    (31) functionCall -> IDENT . LPAREN RPAREN
    (32) functionCall -> IDENT . LPAREN error NEWLINE
    (33) functionCall -> IDENT . error NEWLINE

    LPAREN          shift and go to state 58
    error           shift and go to state 59


state 72

    (34) functionWithObj -> IDENT DOT functionCall .

    RBRACKET        reduce using rule 34 (functionWithObj -> IDENT DOT functionCall .)
    NEWLINE         reduce using rule 34 (functionWithObj -> IDENT DOT functionCall .)
    error           reduce using rule 34 (functionWithObj -> IDENT DOT functionCall .)
    IDENT           reduce using rule 34 (functionWithObj -> IDENT DOT functionCall .)


state 73

    (35) functionWithObj -> IDENT DOT error . NEWLINE

    NEWLINE         shift and go to state 84


state 74

    (24) stmtList -> stmtList NEWLINE stmt .

    RBRACKET        reduce using rule 24 (stmtList -> stmtList NEWLINE stmt .)
    NEWLINE         reduce using rule 24 (stmtList -> stmtList NEWLINE stmt .)
    error           reduce using rule 24 (stmtList -> stmtList NEWLINE stmt .)
    IDENT           reduce using rule 24 (stmtList -> stmtList NEWLINE stmt .)


state 75

    (19) blockparam -> STRING .

    IRBRACKET       reduce using rule 19 (blockparam -> STRING .)
    COMMA           reduce using rule 19 (blockparam -> STRING .)


state 76

    (15) sectionblock -> SECTION LPAREN STRING RPAREN ILBRACKET blockparamlist . IRBRACKET
    (16) blockparamlist -> blockparamlist . COMMA blockparam

    IRBRACKET       shift and go to state 85
    COMMA           shift and go to state 86


state 77

    (17) blockparamlist -> blockparam .

    IRBRACKET       reduce using rule 17 (blockparamlist -> blockparam .)
    COMMA           reduce using rule 17 (blockparamlist -> blockparam .)


state 78

    (18) blockparam -> INPUT . STRING

    STRING          shift and go to state 87


state 79

    (20) blockparam -> TITLE . COLON STRING

    COLON           shift and go to state 88


state 80

    (21) blockparam -> MULTIPLE . COLON BOOL

    COLON           shift and go to state 89


state 81

    (22) blockparam -> REQUIRED . COLON BOOL

    COLON           shift and go to state 90


state 82

    (30) functionCall -> IDENT LPAREN paramlist RPAREN .

    RBRACKET        reduce using rule 30 (functionCall -> IDENT LPAREN paramlist RPAREN .)
    NEWLINE         reduce using rule 30 (functionCall -> IDENT LPAREN paramlist RPAREN .)
    error           reduce using rule 30 (functionCall -> IDENT LPAREN paramlist RPAREN .)
    IDENT           reduce using rule 30 (functionCall -> IDENT LPAREN paramlist RPAREN .)


state 83

    (32) functionCall -> IDENT LPAREN error NEWLINE .

    RBRACKET        reduce using rule 32 (functionCall -> IDENT LPAREN error NEWLINE .)
    NEWLINE         reduce using rule 32 (functionCall -> IDENT LPAREN error NEWLINE .)
    error           reduce using rule 32 (functionCall -> IDENT LPAREN error NEWLINE .)
    IDENT           reduce using rule 32 (functionCall -> IDENT LPAREN error NEWLINE .)


state 84

    (35) functionWithObj -> IDENT DOT error NEWLINE .

    RBRACKET        reduce using rule 35 (functionWithObj -> IDENT DOT error NEWLINE .)
    NEWLINE         reduce using rule 35 (functionWithObj -> IDENT DOT error NEWLINE .)
    error           reduce using rule 35 (functionWithObj -> IDENT DOT error NEWLINE .)
    IDENT           reduce using rule 35 (functionWithObj -> IDENT DOT error NEWLINE .)


state 85

    (15) sectionblock -> SECTION LPAREN STRING RPAREN ILBRACKET blockparamlist IRBRACKET .

    RBRACKET        reduce using rule 15 (sectionblock -> SECTION LPAREN STRING RPAREN ILBRACKET blockparamlist IRBRACKET .)
    NEWLINE         reduce using rule 15 (sectionblock -> SECTION LPAREN STRING RPAREN ILBRACKET blockparamlist IRBRACKET .)


state 86

    (16) blockparamlist -> blockparamlist COMMA . blockparam
    (18) blockparam -> . INPUT STRING
    (19) blockparam -> . STRING
    (20) blockparam -> . TITLE COLON STRING
    (21) blockparam -> . MULTIPLE COLON BOOL
    (22) blockparam -> . REQUIRED COLON BOOL

    INPUT           shift and go to state 78
    STRING          shift and go to state 75
    TITLE           shift and go to state 79
    MULTIPLE        shift and go to state 80
    REQUIRED        shift and go to state 81

    blockparam                     shift and go to state 91

state 87

    (18) blockparam -> INPUT STRING .

    IRBRACKET       reduce using rule 18 (blockparam -> INPUT STRING .)
    COMMA           reduce using rule 18 (blockparam -> INPUT STRING .)


state 88

    (20) blockparam -> TITLE COLON . STRING

    STRING          shift and go to state 92


state 89

    (21) blockparam -> MULTIPLE COLON . BOOL

    BOOL            shift and go to state 93


state 90

    (22) blockparam -> REQUIRED COLON . BOOL

    BOOL            shift and go to state 94


state 91

    (16) blockparamlist -> blockparamlist COMMA blockparam .

    IRBRACKET       reduce using rule 16 (blockparamlist -> blockparamlist COMMA blockparam .)
    COMMA           reduce using rule 16 (blockparamlist -> blockparamlist COMMA blockparam .)


state 92

    (20) blockparam -> TITLE COLON STRING .

    IRBRACKET       reduce using rule 20 (blockparam -> TITLE COLON STRING .)
    COMMA           reduce using rule 20 (blockparam -> TITLE COLON STRING .)


state 93

    (21) blockparam -> MULTIPLE COLON BOOL .

    IRBRACKET       reduce using rule 21 (blockparam -> MULTIPLE COLON BOOL .)
    COMMA           reduce using rule 21 (blockparam -> MULTIPLE COLON BOOL .)


state 94

    (22) blockparam -> REQUIRED COLON BOOL .

    IRBRACKET       reduce using rule 22 (blockparam -> REQUIRED COLON BOOL .)
    COMMA           reduce using rule 22 (blockparam -> REQUIRED COLON BOOL .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for error in state 62 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 62 resolved as shift
